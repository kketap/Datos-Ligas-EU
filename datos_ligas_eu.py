# -*- coding: utf-8 -*-
"""Datos Ligas EU.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CoDHoD1OqFrhWzcSSO7oVSGPY1rG6nXM

# **Analisis de Datos de Ligas de Fútbol Europeo**
 Usando una base de datos proveniente de la página web Kaggle, se procederá a analizar la data empleando SQL, con el objetivo de mostrar los datos de los distintos partidos de varias ligas europeas entre 2008 y 2016. En este caso, el análisis se centrará únicamente en las cinco principales.

1. Se Importa la fuente de datos desde la página koggle
"""

import kagglehub
hugomathien_soccer_path = kagglehub.dataset_download('hugomathien/soccer')

print('Data source import complete.')

"""2. Se configura la ruta de archivo de los datos"""

#Imports

import numpy as np
import pandas as pd
import sqlite3
import matplotlib.pyplot as plt


path = hugomathien_soccer_path

database = path + '/database.sqlite'

"""3. Se crea la conexión a la DB, y se ven las tablas existentes"""

conn = sqlite3.connect(database)

tables = pd.read_sql("""SELECT *
                        FROM sqlite_master
                        WHERE type='table';""", conn)
tables

"""3.1 Query simple de la tabla "Country"
"""

countries = pd.read_sql("""SELECT *
                        FROM Country;""", conn)
countries

"""4. Se relaciona a cada País con su Liga correspondiente"""

leagues = pd.read_sql("""SELECT *
                        FROM League
                        JOIN Country ON Country.id = League.country_id;""", conn)
leagues

"""5. Listado de equipos, ordenados en orden alfabético"""

teams = pd.read_sql("""SELECT *
                        FROM Team
                        ORDER BY team_long_name
                        LIMIT 15;""", conn)
teams

"""6. Listado de partidos, en este caso los 15 más recientes de la Premier League"""

detailed_matches = pd.read_sql("""SELECT Match.id,
                                        Country.name AS country_name,
                                        League.name AS league_name,
                                        season,
                                        stage AS match_week,
                                        date,
                                        HT.team_long_name AS  home_team,
                                        AT.team_long_name AS away_team,
                                        home_team_goal,
                                        away_team_goal
                                FROM Match
                                JOIN Country on Country.id = Match.country_id
                                JOIN League on League.id = Match.league_id
                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id
                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id
                                WHERE country_name = 'England'
                                ORDER by date desc
                                LIMIT 15;""", conn)
detailed_matches

"""7. Resumen de cada temporada de las 5 ligas europeas más importantes"""

leages_by_season = pd.read_sql("""SELECT Country.name AS country_name,
                                        League.name AS league_name,
                                        season,
                                        count(distinct stage) AS number_of_stages,
                                        count(distinct HT.team_long_name) AS number_of_teams,
                                        round(avg(home_team_goal), 2) AS avg_home_team_scors,
                                        round(avg(away_team_goal), 2) AS avg_away_team_goals,
                                        round(avg(home_team_goal-away_team_goal), 2) AS avg_goal_dif,
                                        round(avg(home_team_goal+away_team_goal), 2) AS avg_goals_per_game,
                                        sum(home_team_goal+away_team_goal) AS total_goals
                                FROM Match
                                JOIN Country on Country.id = Match.country_id
                                JOIN League on League.id = Match.league_id
                                LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id
                                LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id
                                WHERE country_name in ('Spain', 'Germany', 'France', 'Italy', 'England')
                                GROUP BY Country.name, League.name, season
                                HAVING count(distinct stage) > 10
                                ORDER BY Country.name, League.name, season desc
                                ;""", conn)
leages_by_season

"""8. Promedio de goles por partido a través de cada temporda en las distintas ligas"""

df = leages_by_season.pivot(index='season', columns='country_name', values='avg_goals_per_game')

df.plot(figsize=(12,6),title='Promedio de goles por partido a través de cada temporda')

"""9. Diferencia de promedio de goles entre equipos locales y visitantes a lo largo de las temporadas"""

df = leages_by_season.pivot(index='season', columns='country_name', values='avg_goal_dif')

df.plot(figsize=(12,6),title='Diferencia de promedio de goles entre equipos locales y visitantes')

"""10. Distribución de peso y altura de jugadores en las distintas ligas europeas"""

players_height = pd.read_sql("""SELECT CASE
                                        WHEN ROUND(height)<165 then 165
                                        WHEN ROUND(height)>195 then 195
                                        ELSE ROUND(height)
                                        END AS calc_height,
                                        COUNT(height) AS distribution,
                                        ROUND(AVG(weight)) AS avg_weight
                            FROM PLAYER
                            LEFT JOIN (SELECT Player_Attributes.player_api_id
                                        FROM Player_Attributes
                                        GROUP BY Player_Attributes.player_api_id)
                                        AS PA_Grouped ON PLAYER.player_api_id = PA_Grouped.player_api_id
                            GROUP BY calc_height
                            ORDER BY distribution DESC
                                ;""", conn)
players_height

"""11. Equipos de las 5 principales ligas con mayor cantidad de goles por partido en cada temporada"""

top_5_leagues = ['Spain', 'Germany', 'France', 'Italy', 'England']

team_performance_top_5_leagues = team_performance[
    team_performance['team_long_name'].isin(
        pd.read_sql("""SELECT T.team_long_name
                        FROM Team AS T
                        JOIN Match ON T.team_api_id = Match.home_team_api_id OR T.team_api_id = Match.away_team_api_id
                        JOIN League ON League.id = Match.league_id
                        JOIN Country ON Country.id = League.country_id
                        WHERE Country.name IN ('Spain', 'Germany', 'France', 'Italy', 'England')
                        GROUP BY T.team_long_name""", conn)['team_long_name']
    )
]

top_5_teams_avg_goals_by_season = team_performance_top_5_leagues.groupby('season').apply(lambda x: x.nlargest(5, 'avg_total_goals'))

top_5_teams_avg_goals_by_season
